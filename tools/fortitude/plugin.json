{
  "$schema": "../tool.schema.json",
  "binary": "fortitude",
  "categories": ["linter"],
  "commands": {
    "check": {
      "arguments": ["check", "--quiet", "--no-respect-gitignore", "$PATH"],
      "tests": [
        {
          "language": ".f90",
          "test_input": "program example\n    implicit none (type, external)\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n",
          "test_output": "program example\n    implicit none (type, external)\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n"
        }
      ]
    },
    "check:fix": {
      "arguments": [
        "check",
        "--quiet",
        "--no-respect-gitignore",
        "--fix",
        "$PATH"
      ],
      "tests": [
        {
          "language": ".f90",
          "test_input": "program example\n    implicit none (type, external)\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n",
          "test_output": "program example\n    implicit none (type, external)\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n"
        }
      ]
    },
    "check:fix:unsafe": {
      "arguments": [
        "check",
        "--quiet",
        "--no-respect-gitignore",
        "--fix",
        "--unsafe-fixes",
        "$PATH"
      ],
      "tests": [
        {
          "language": ".f90",
          "test_input": "program example\n    implicit none\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n",
          "test_output": "program example\n    implicit none (type, external)\n\n    contains\n        integer function addnum(a, b)\n            integer, intent(in) :: a, b\n            return a + b\n        end function addnum\n\nend program example\n"
        }
      ]
    }
  },
  "description": "A Fortran linter, written in Rust",
  "homepage": "https://github.com/plasmafair/fortitude",
  "languages": [],
  "packages": {
    "brew": {
      "package": "fortitude"
    },
    "pip": {
      "package": "fortitude-lint"
    }
  }
}
