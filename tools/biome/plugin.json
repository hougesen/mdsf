{
  "$schema": "../tool.schema.json",
  "binary": "biome",
  "categories": ["formatter", "linter"],
  "commands": {
    "check": {
      "arguments": ["check", "--write", "$PATH"],
      "description": "Runs biome formatter, linter and import sorting with unsafe fixes on the input",
      "homepage": "https://biomejs.dev/reference/cli/#biome-check",
      "tests": [
        {
          "language": "typescript",
          "test_input": "\n    async function asyncAddition(\n            a:number,b:number\n        ) :Promise<\nnumber>\n    {\n        return a+b\n    }\n\n            ",
          "test_output": "async function asyncAddition(a: number, b: number): Promise<number> {\n\treturn a + b;\n}\n"
        }
      ]
    },
    "check:unsafe": {
      "arguments": ["check", "--write", "--unsafe", "$PATH"],
      "description": "Runs biome formatter, linter and import sorting on the input",
      "homepage": "https://biomejs.dev/reference/cli/#biome-check",
      "tests": [
        {
          "language": "typescript",
          "test_input": "\n    async function asyncAddition(\n            a:number,b:number\n        ) :Promise<\nnumber>\n    {\n        return a+b\n    }\n\n            ",
          "test_output": "async function asyncAddition(a: number, b: number): Promise<number> {\n\treturn a + b;\n}\n"
        }
      ]
    },
    "format": {
      "arguments": ["format", "--write", "$PATH"],
      "description": "Runs the biome formatter on input",
      "homepage": "https://biomejs.dev/reference/cli/#biome-format",
      "tests": [
        {
          "language": "json",
          "test_input": "\n              {\n              \"key\": \"value\",\n  \"key2\": [\n      \"value2\",\n      \"value3\",\n      1\n            , null]\n }\n  ",
          "test_output": "{\n\t\"key\": \"value\",\n\t\"key2\": [\"value2\", \"value3\", 1, null]\n}\n"
        },
        {
          "language": "javascript",
          "test_input": "\n    async function asyncAddition(\n            a,b\n        ) {\n        return a+b\n    }\n\n            ",
          "test_output": "async function asyncAddition(a, b) {\n\treturn a + b;\n}\n"
        },
        {
          "language": "typescript",
          "test_input": "\n    async function asyncAddition(\n            a:number,b:number\n        ) :Promise<\nnumber>\n    {\n        return a+b\n    }\n\n            ",
          "test_output": "async function asyncAddition(a: number, b: number): Promise<number> {\n\treturn a + b;\n}\n"
        }
      ]
    },
    "lint": {
      "arguments": ["lint", "--write", "$PATH"],
      "description": "Runs the biome linter on input",
      "homepage": "https://biomejs.dev/reference/cli/#biome-lint",
      "tests": [
        {
          "language": "javascript",
          "test_input": "let variable = 0;\n",
          "test_output": "const variable = 0;\n"
        }
      ]
    },
    "lint:unsafe": {
      "arguments": ["lint", "--write", "--unsafe", "$PATH"],
      "description": "Runs the biome linter with unsafe fixes enable",
      "homepage": "https://biomejs.dev/reference/cli/#biome-format",
      "tests": [
        {
          "language": "javascript",
          "test_input": "const hello = \"hello\";\nconst world = \"world\";\n\nconsole.log(\"\" + hello + world);\n",
          "test_output": "const hello = \"hello\";\nconst world = \"world\";\n\nconsole.log(`${hello}${world}`);\n"
        }
      ]
    }
  },
  "description": "One toolchain for your web project",
  "homepage": "https://github.com/biomejs/biome",
  "languages": ["javascript", "json", "typescript", "vue"],
  "packages": {
    "npm": {
      "package": "@biomejs/biome"
    }
  }
}
