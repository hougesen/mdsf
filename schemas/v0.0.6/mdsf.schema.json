{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MdsfConfig",
  "type": "object",
  "properties": {
    "$schema": {
      "default": "https://raw.githubusercontent.com/hougesen/mdsf/main/schemas/v0.0.6/mdsf.schema.json",
      "type": "string"
    },
    "blade": {
      "default": {
        "enabled": true,
        "formatter": "blade-formatter"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Blade"
        }
      ]
    },
    "c": {
      "default": {
        "enabled": true,
        "formatter": "clang-format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_C"
        }
      ]
    },
    "cabal": {
      "default": {
        "enabled": true,
        "formatter": "cabal_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Cabal"
        }
      ]
    },
    "clojure": {
      "default": {
        "enabled": true,
        "formatter": [["cljstyle", "joker"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Clojure"
        }
      ]
    },
    "cpp": {
      "default": {
        "enabled": true,
        "formatter": "clang-format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Cpp"
        }
      ]
    },
    "crystal": {
      "default": {
        "enabled": true,
        "formatter": "crystal_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Crystal"
        }
      ]
    },
    "csharp": {
      "default": {
        "enabled": true,
        "formatter": [["csharpier", "clang-format"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_CSharp"
        }
      ]
    },
    "css": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "stylelint"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Css"
        }
      ]
    },
    "d": {
      "default": {
        "enabled": true,
        "formatter": "dfmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_D"
        }
      ]
    },
    "dart": {
      "default": {
        "enabled": true,
        "formatter": "dart_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Dart"
        }
      ]
    },
    "elixir": {
      "default": {
        "enabled": true,
        "formatter": "mix_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Elixir"
        }
      ]
    },
    "elm": {
      "default": {
        "enabled": true,
        "formatter": "elm-format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Elm"
        }
      ]
    },
    "erb": {
      "default": {
        "enabled": true,
        "formatter": "erb-formatter"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Erb"
        }
      ]
    },
    "erlang": {
      "default": {
        "enabled": true,
        "formatter": [["erlfmt", "efmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Erlang"
        }
      ]
    },
    "format_finished_document": {
      "description": "Format the processed document with the selected markdown formatter.",
      "default": false,
      "type": "boolean"
    },
    "fortran": {
      "default": {
        "enabled": true,
        "formatter": [["fprettify", "findent"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Fortran"
        }
      ]
    },
    "fsharp": {
      "default": {
        "enabled": true,
        "formatter": "fantomas"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_FSharp"
        }
      ]
    },
    "gleam": {
      "default": {
        "enabled": true,
        "formatter": "gleam_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Gleam"
        }
      ]
    },
    "go": {
      "default": {
        "enabled": true,
        "formatter": ["goimports", ["gofumpt", "gofmt", "crlfmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Go"
        }
      ]
    },
    "graphql": {
      "default": {
        "enabled": true,
        "formatter": "prettier"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_GraphQL"
        }
      ]
    },
    "groovy": {
      "default": {
        "enabled": true,
        "formatter": "npm-groovy-lint"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Groovy"
        }
      ]
    },
    "handlebars": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "djlint"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Handlebars"
        }
      ]
    },
    "haskell": {
      "default": {
        "enabled": true,
        "formatter": [["fourmolu", "ormolu", "hindent", "stylish-haskell"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Haskell"
        }
      ]
    },
    "hcl": {
      "default": {
        "enabled": true,
        "formatter": [["terraform_fmt", "tofu_fmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Hcl"
        }
      ]
    },
    "html": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "djlint"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Html"
        }
      ]
    },
    "java": {
      "default": {
        "enabled": true,
        "formatter": [["google-java-format", "clang-format"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Java"
        }
      ]
    },
    "javascript": {
      "default": {
        "enabled": true,
        "formatter": [
          ["prettier", "biome", "deno_fmt", "clang-format", "standardjs"]
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_JavaScript"
        }
      ]
    },
    "javascript_runtime": {
      "description": "Set npm script runner runtime.\n\nShould be considered experimental since not all tools support being run using Bun/Deno.\n\n`node -> npx`\n\n`bun -> bunx`\n\n`deno -> deno run`",
      "default": "node",
      "allOf": [
        {
          "$ref": "#/definitions/JavaScriptRuntime"
        }
      ]
    },
    "json": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "biome", "deno_fmt", "clang-format"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Json"
        }
      ]
    },
    "julia": {
      "default": {
        "enabled": true,
        "formatter": "juliaformatter.jl"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Julia"
        }
      ]
    },
    "just": {
      "default": {
        "enabled": true,
        "formatter": "just_fmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Just"
        }
      ]
    },
    "kcl": {
      "default": {
        "enabled": true,
        "formatter": "kcl_fmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Kcl"
        }
      ]
    },
    "kotlin": {
      "default": {
        "enabled": true,
        "formatter": [["ktlint", "ktfmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Kotlin"
        }
      ]
    },
    "lua": {
      "default": {
        "enabled": true,
        "formatter": [["stylua", "luaformatter"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Lua"
        }
      ]
    },
    "markdown": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "mdformat"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Markdown"
        }
      ]
    },
    "mustache": {
      "default": {
        "enabled": true,
        "formatter": "djlint"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Mustache"
        }
      ]
    },
    "nim": {
      "default": {
        "enabled": true,
        "formatter": "nimpretty"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Nim"
        }
      ]
    },
    "nix": {
      "default": {
        "enabled": true,
        "formatter": [["nixfmt", "alejandra", "nixpkgs-fmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Nix"
        }
      ]
    },
    "nunjucks": {
      "default": {
        "enabled": true,
        "formatter": "djlint"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Nunjucks"
        }
      ]
    },
    "objective_c": {
      "default": {
        "enabled": true,
        "formatter": "clang-format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_ObjectiveC"
        }
      ]
    },
    "ocaml": {
      "default": {
        "enabled": true,
        "formatter": [["ocamlformat", "ocp-indent"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_OCaml"
        }
      ]
    },
    "perl": {
      "default": {
        "enabled": true,
        "formatter": "perltidy"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Perl"
        }
      ]
    },
    "protobuf": {
      "default": {
        "enabled": true,
        "formatter": [["buf", "clang-format"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Protobuf"
        }
      ]
    },
    "purescript": {
      "default": {
        "enabled": true,
        "formatter": "purs-tidy"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_PureScript"
        }
      ]
    },
    "python": {
      "default": {
        "enabled": true,
        "formatter": [
          ["usort", "isort"],
          ["ruff", "blue", "black", "yapf", "autopep8", "pyink"]
        ]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Python"
        }
      ]
    },
    "rescript": {
      "default": {
        "enabled": true,
        "formatter": "rescript_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_ReScript"
        }
      ]
    },
    "restructuredtext": {
      "default": {
        "enabled": true,
        "formatter": "rstfmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_ReStructuredText"
        }
      ]
    },
    "roc": {
      "default": {
        "enabled": true,
        "formatter": "roc_format"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Roc"
        }
      ]
    },
    "ruby": {
      "default": {
        "enabled": true,
        "formatter": [["rubocop", "rufo", "rubyfmt", "standardrb"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Ruby"
        }
      ]
    },
    "rust": {
      "default": {
        "enabled": true,
        "formatter": [["rustfmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Rust"
        }
      ]
    },
    "scala": {
      "default": {
        "enabled": true,
        "formatter": "scalafmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Scala"
        }
      ]
    },
    "shell": {
      "default": {
        "enabled": true,
        "formatter": [["shfmt", "beautysh"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Shell"
        }
      ]
    },
    "sql": {
      "default": {
        "enabled": true,
        "formatter": [["sql-formatter", "sqlfluff"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Sql"
        }
      ]
    },
    "swift": {
      "default": {
        "enabled": true,
        "formatter": [["swift-format", "swiftformat"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Swift"
        }
      ]
    },
    "toml": {
      "default": {
        "enabled": true,
        "formatter": "taplo"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Toml"
        }
      ]
    },
    "typescript": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "biome", "deno_fmt"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_TypeScript"
        }
      ]
    },
    "vue": {
      "default": {
        "enabled": true,
        "formatter": "prettier"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Vue"
        }
      ]
    },
    "xml": {
      "default": {
        "enabled": true,
        "formatter": [["xmllint", "xmlformat"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Xml"
        }
      ]
    },
    "yaml": {
      "default": {
        "enabled": true,
        "formatter": [["prettier", "yamlfmt", "yamlfix"]]
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Yaml"
        }
      ]
    },
    "zig": {
      "default": {
        "enabled": true,
        "formatter": "zigfmt"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Lang_for_Zig"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Blade": {
      "type": "string",
      "enum": ["blade-formatter"]
    },
    "C": {
      "type": "string",
      "enum": ["clang-format"]
    },
    "CSharp": {
      "type": "string",
      "enum": ["csharpier", "clang-format"]
    },
    "Cabal": {
      "type": "string",
      "enum": ["cabal_format"]
    },
    "Clojure": {
      "type": "string",
      "enum": ["cljstyle", "joker"]
    },
    "Cpp": {
      "type": "string",
      "enum": ["clang-format"]
    },
    "Crystal": {
      "type": "string",
      "enum": ["crystal_format"]
    },
    "Css": {
      "type": "string",
      "enum": ["prettier", "stylelint"]
    },
    "D": {
      "type": "string",
      "enum": ["dfmt"]
    },
    "Dart": {
      "type": "string",
      "enum": ["dart_format"]
    },
    "Elixir": {
      "type": "string",
      "enum": ["mix_format"]
    },
    "Elm": {
      "type": "string",
      "enum": ["elm-format"]
    },
    "Erb": {
      "type": "string",
      "enum": ["erb-formatter"]
    },
    "Erlang": {
      "type": "string",
      "enum": ["erlfmt", "efmt"]
    },
    "FSharp": {
      "type": "string",
      "enum": ["fantomas"]
    },
    "Fortran": {
      "type": "string",
      "enum": ["fprettify", "findent"]
    },
    "Gleam": {
      "type": "string",
      "enum": ["gleam_format"]
    },
    "Go": {
      "type": "string",
      "enum": ["gofmt", "gofumpt", "goimports", "crlfmt"]
    },
    "GraphQL": {
      "type": "string",
      "enum": ["prettier"]
    },
    "Groovy": {
      "type": "string",
      "enum": ["npm-groovy-lint"]
    },
    "Handlebars": {
      "type": "string",
      "enum": ["prettier", "djlint"]
    },
    "Haskell": {
      "type": "string",
      "enum": ["fourmolu", "ormolu", "hindent", "stylish-haskell"]
    },
    "Hcl": {
      "type": "string",
      "enum": ["terraform_fmt", "tofu_fmt"]
    },
    "Html": {
      "type": "string",
      "enum": ["prettier", "djlint"]
    },
    "Java": {
      "type": "string",
      "enum": ["google-java-format", "clang-format"]
    },
    "JavaScript": {
      "type": "string",
      "enum": ["prettier", "biome", "deno_fmt", "clang-format", "standardjs"]
    },
    "JavaScriptRuntime": {
      "type": "string",
      "enum": ["bun", "deno", "node"]
    },
    "Json": {
      "type": "string",
      "enum": ["prettier", "biome", "deno_fmt", "clang-format"]
    },
    "Julia": {
      "type": "string",
      "enum": ["juliaformatter.jl"]
    },
    "Just": {
      "type": "string",
      "enum": ["just_fmt"]
    },
    "Kcl": {
      "type": "string",
      "enum": ["kcl_fmt"]
    },
    "Kotlin": {
      "type": "string",
      "enum": ["ktlint", "ktfmt"]
    },
    "Lang_for_Blade": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Blade"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_C": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_C"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_CSharp": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_CSharp"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Cabal": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Cabal"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Clojure": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Clojure"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Cpp": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Cpp"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Crystal": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Crystal"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Css": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Css"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_D": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_D"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Dart": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Dart"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Elixir": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Elixir"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Elm": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Elm"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Erb": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Erb"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Erlang": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Erlang"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_FSharp": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_FSharp"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Fortran": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Fortran"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Gleam": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Gleam"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Go": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Go"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_GraphQL": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_GraphQL"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Groovy": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Groovy"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Handlebars": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Handlebars"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Haskell": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Haskell"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Hcl": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Hcl"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Html": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Html"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Java": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Java"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_JavaScript": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_JavaScript"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Json": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Json"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Julia": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Julia"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Just": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Just"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Kcl": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Kcl"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Kotlin": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Kotlin"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Lua": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Lua"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Markdown": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Markdown"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Mustache": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Mustache"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Nim": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Nim"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Nix": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Nix"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Nunjucks": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Nunjucks"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_OCaml": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_OCaml"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_ObjectiveC": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_ObjectiveC"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Perl": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Perl"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Protobuf": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Protobuf"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_PureScript": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_PureScript"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Python": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Python"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_ReScript": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_ReScript"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_ReStructuredText": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_ReStructuredText"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Roc": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Roc"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Ruby": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Ruby"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Rust": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Rust"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Scala": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Scala"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Shell": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Shell"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Sql": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Sql"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Swift": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Swift"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Toml": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Toml"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_TypeScript": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_TypeScript"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Vue": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Vue"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Xml": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Xml"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Yaml": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Yaml"
        }
      },
      "additionalProperties": false
    },
    "Lang_for_Zig": {
      "type": "object",
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "formatter": {
          "$ref": "#/definitions/MdsfFormatter_for_Zig"
        }
      },
      "additionalProperties": false
    },
    "Lua": {
      "type": "string",
      "enum": ["stylua", "luaformatter"]
    },
    "Markdown": {
      "type": "string",
      "enum": ["prettier", "mdformat"]
    },
    "MdsfFormatter_for_Blade": {
      "anyOf": [
        {
          "$ref": "#/definitions/Blade"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Blade"
          }
        }
      ]
    },
    "MdsfFormatter_for_C": {
      "anyOf": [
        {
          "$ref": "#/definitions/C"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_C"
          }
        }
      ]
    },
    "MdsfFormatter_for_CSharp": {
      "anyOf": [
        {
          "$ref": "#/definitions/CSharp"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_CSharp"
          }
        }
      ]
    },
    "MdsfFormatter_for_Cabal": {
      "anyOf": [
        {
          "$ref": "#/definitions/Cabal"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Cabal"
          }
        }
      ]
    },
    "MdsfFormatter_for_Clojure": {
      "anyOf": [
        {
          "$ref": "#/definitions/Clojure"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Clojure"
          }
        }
      ]
    },
    "MdsfFormatter_for_Cpp": {
      "anyOf": [
        {
          "$ref": "#/definitions/Cpp"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Cpp"
          }
        }
      ]
    },
    "MdsfFormatter_for_Crystal": {
      "anyOf": [
        {
          "$ref": "#/definitions/Crystal"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Crystal"
          }
        }
      ]
    },
    "MdsfFormatter_for_Css": {
      "anyOf": [
        {
          "$ref": "#/definitions/Css"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Css"
          }
        }
      ]
    },
    "MdsfFormatter_for_D": {
      "anyOf": [
        {
          "$ref": "#/definitions/D"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_D"
          }
        }
      ]
    },
    "MdsfFormatter_for_Dart": {
      "anyOf": [
        {
          "$ref": "#/definitions/Dart"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Dart"
          }
        }
      ]
    },
    "MdsfFormatter_for_Elixir": {
      "anyOf": [
        {
          "$ref": "#/definitions/Elixir"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Elixir"
          }
        }
      ]
    },
    "MdsfFormatter_for_Elm": {
      "anyOf": [
        {
          "$ref": "#/definitions/Elm"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Elm"
          }
        }
      ]
    },
    "MdsfFormatter_for_Erb": {
      "anyOf": [
        {
          "$ref": "#/definitions/Erb"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Erb"
          }
        }
      ]
    },
    "MdsfFormatter_for_Erlang": {
      "anyOf": [
        {
          "$ref": "#/definitions/Erlang"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Erlang"
          }
        }
      ]
    },
    "MdsfFormatter_for_FSharp": {
      "anyOf": [
        {
          "$ref": "#/definitions/FSharp"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_FSharp"
          }
        }
      ]
    },
    "MdsfFormatter_for_Fortran": {
      "anyOf": [
        {
          "$ref": "#/definitions/Fortran"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Fortran"
          }
        }
      ]
    },
    "MdsfFormatter_for_Gleam": {
      "anyOf": [
        {
          "$ref": "#/definitions/Gleam"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Gleam"
          }
        }
      ]
    },
    "MdsfFormatter_for_Go": {
      "anyOf": [
        {
          "$ref": "#/definitions/Go"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Go"
          }
        }
      ]
    },
    "MdsfFormatter_for_GraphQL": {
      "anyOf": [
        {
          "$ref": "#/definitions/GraphQL"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_GraphQL"
          }
        }
      ]
    },
    "MdsfFormatter_for_Groovy": {
      "anyOf": [
        {
          "$ref": "#/definitions/Groovy"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Groovy"
          }
        }
      ]
    },
    "MdsfFormatter_for_Handlebars": {
      "anyOf": [
        {
          "$ref": "#/definitions/Handlebars"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Handlebars"
          }
        }
      ]
    },
    "MdsfFormatter_for_Haskell": {
      "anyOf": [
        {
          "$ref": "#/definitions/Haskell"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Haskell"
          }
        }
      ]
    },
    "MdsfFormatter_for_Hcl": {
      "anyOf": [
        {
          "$ref": "#/definitions/Hcl"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Hcl"
          }
        }
      ]
    },
    "MdsfFormatter_for_Html": {
      "anyOf": [
        {
          "$ref": "#/definitions/Html"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Html"
          }
        }
      ]
    },
    "MdsfFormatter_for_Java": {
      "anyOf": [
        {
          "$ref": "#/definitions/Java"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Java"
          }
        }
      ]
    },
    "MdsfFormatter_for_JavaScript": {
      "anyOf": [
        {
          "$ref": "#/definitions/JavaScript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_JavaScript"
          }
        }
      ]
    },
    "MdsfFormatter_for_Json": {
      "anyOf": [
        {
          "$ref": "#/definitions/Json"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Json"
          }
        }
      ]
    },
    "MdsfFormatter_for_Julia": {
      "anyOf": [
        {
          "$ref": "#/definitions/Julia"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Julia"
          }
        }
      ]
    },
    "MdsfFormatter_for_Just": {
      "anyOf": [
        {
          "$ref": "#/definitions/Just"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Just"
          }
        }
      ]
    },
    "MdsfFormatter_for_Kcl": {
      "anyOf": [
        {
          "$ref": "#/definitions/Kcl"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Kcl"
          }
        }
      ]
    },
    "MdsfFormatter_for_Kotlin": {
      "anyOf": [
        {
          "$ref": "#/definitions/Kotlin"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Kotlin"
          }
        }
      ]
    },
    "MdsfFormatter_for_Lua": {
      "anyOf": [
        {
          "$ref": "#/definitions/Lua"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Lua"
          }
        }
      ]
    },
    "MdsfFormatter_for_Markdown": {
      "anyOf": [
        {
          "$ref": "#/definitions/Markdown"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Markdown"
          }
        }
      ]
    },
    "MdsfFormatter_for_Mustache": {
      "anyOf": [
        {
          "$ref": "#/definitions/Mustache"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Mustache"
          }
        }
      ]
    },
    "MdsfFormatter_for_Nim": {
      "anyOf": [
        {
          "$ref": "#/definitions/Nim"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Nim"
          }
        }
      ]
    },
    "MdsfFormatter_for_Nix": {
      "anyOf": [
        {
          "$ref": "#/definitions/Nix"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Nix"
          }
        }
      ]
    },
    "MdsfFormatter_for_Nunjucks": {
      "anyOf": [
        {
          "$ref": "#/definitions/Nunjucks"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Nunjucks"
          }
        }
      ]
    },
    "MdsfFormatter_for_OCaml": {
      "anyOf": [
        {
          "$ref": "#/definitions/OCaml"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_OCaml"
          }
        }
      ]
    },
    "MdsfFormatter_for_ObjectiveC": {
      "anyOf": [
        {
          "$ref": "#/definitions/ObjectiveC"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_ObjectiveC"
          }
        }
      ]
    },
    "MdsfFormatter_for_Perl": {
      "anyOf": [
        {
          "$ref": "#/definitions/Perl"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Perl"
          }
        }
      ]
    },
    "MdsfFormatter_for_Protobuf": {
      "anyOf": [
        {
          "$ref": "#/definitions/Protobuf"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Protobuf"
          }
        }
      ]
    },
    "MdsfFormatter_for_PureScript": {
      "anyOf": [
        {
          "$ref": "#/definitions/PureScript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_PureScript"
          }
        }
      ]
    },
    "MdsfFormatter_for_Python": {
      "anyOf": [
        {
          "$ref": "#/definitions/Python"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Python"
          }
        }
      ]
    },
    "MdsfFormatter_for_ReScript": {
      "anyOf": [
        {
          "$ref": "#/definitions/ReScript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_ReScript"
          }
        }
      ]
    },
    "MdsfFormatter_for_ReStructuredText": {
      "anyOf": [
        {
          "$ref": "#/definitions/ReStructuredText"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_ReStructuredText"
          }
        }
      ]
    },
    "MdsfFormatter_for_Roc": {
      "anyOf": [
        {
          "$ref": "#/definitions/Roc"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Roc"
          }
        }
      ]
    },
    "MdsfFormatter_for_Ruby": {
      "anyOf": [
        {
          "$ref": "#/definitions/Ruby"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Ruby"
          }
        }
      ]
    },
    "MdsfFormatter_for_Rust": {
      "anyOf": [
        {
          "$ref": "#/definitions/Rust"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Rust"
          }
        }
      ]
    },
    "MdsfFormatter_for_Scala": {
      "anyOf": [
        {
          "$ref": "#/definitions/Scala"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Scala"
          }
        }
      ]
    },
    "MdsfFormatter_for_Shell": {
      "anyOf": [
        {
          "$ref": "#/definitions/Shell"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Shell"
          }
        }
      ]
    },
    "MdsfFormatter_for_Sql": {
      "anyOf": [
        {
          "$ref": "#/definitions/Sql"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Sql"
          }
        }
      ]
    },
    "MdsfFormatter_for_Swift": {
      "anyOf": [
        {
          "$ref": "#/definitions/Swift"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Swift"
          }
        }
      ]
    },
    "MdsfFormatter_for_Toml": {
      "anyOf": [
        {
          "$ref": "#/definitions/Toml"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Toml"
          }
        }
      ]
    },
    "MdsfFormatter_for_TypeScript": {
      "anyOf": [
        {
          "$ref": "#/definitions/TypeScript"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_TypeScript"
          }
        }
      ]
    },
    "MdsfFormatter_for_Vue": {
      "anyOf": [
        {
          "$ref": "#/definitions/Vue"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Vue"
          }
        }
      ]
    },
    "MdsfFormatter_for_Xml": {
      "anyOf": [
        {
          "$ref": "#/definitions/Xml"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Xml"
          }
        }
      ]
    },
    "MdsfFormatter_for_Yaml": {
      "anyOf": [
        {
          "$ref": "#/definitions/Yaml"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Yaml"
          }
        }
      ]
    },
    "MdsfFormatter_for_Zig": {
      "anyOf": [
        {
          "$ref": "#/definitions/Zig"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MdsfFormatter_for_Zig"
          }
        }
      ]
    },
    "Mustache": {
      "type": "string",
      "enum": ["djlint"]
    },
    "Nim": {
      "type": "string",
      "enum": ["nimpretty"]
    },
    "Nix": {
      "type": "string",
      "enum": ["nixfmt", "nixpkgs-fmt", "alejandra"]
    },
    "Nunjucks": {
      "type": "string",
      "enum": ["djlint"]
    },
    "OCaml": {
      "type": "string",
      "enum": ["ocamlformat", "ocp-indent"]
    },
    "ObjectiveC": {
      "type": "string",
      "enum": ["clang-format"]
    },
    "Perl": {
      "type": "string",
      "enum": ["perltidy"]
    },
    "Protobuf": {
      "type": "string",
      "enum": ["buf", "clang-format"]
    },
    "PureScript": {
      "type": "string",
      "enum": ["purs-tidy"]
    },
    "Python": {
      "type": "string",
      "enum": [
        "ruff",
        "black",
        "yapf",
        "blue",
        "autopep8",
        "isort",
        "usort",
        "pyink",
        "auto-optional"
      ]
    },
    "ReScript": {
      "type": "string",
      "enum": ["rescript_format"]
    },
    "ReStructuredText": {
      "type": "string",
      "enum": ["rstfmt"]
    },
    "Roc": {
      "type": "string",
      "enum": ["roc_format"]
    },
    "Ruby": {
      "type": "string",
      "enum": ["rubyfmt", "rubocop", "rufo", "standardrb"]
    },
    "Rust": {
      "type": "string",
      "enum": ["rustfmt", "yew-fmt", "leptosfmt"]
    },
    "Scala": {
      "type": "string",
      "enum": ["scalafmt"]
    },
    "Shell": {
      "type": "string",
      "enum": ["shfmt", "beautysh"]
    },
    "Sql": {
      "type": "string",
      "enum": ["sqlfluff", "sql-formatter"]
    },
    "Swift": {
      "type": "string",
      "enum": ["swift-format", "swiftformat"]
    },
    "Toml": {
      "type": "string",
      "enum": ["taplo"]
    },
    "TypeScript": {
      "type": "string",
      "enum": ["prettier", "biome", "deno_fmt"]
    },
    "Vue": {
      "type": "string",
      "enum": ["prettier", "biome"]
    },
    "Xml": {
      "type": "string",
      "enum": ["xmllint", "xmlformat"]
    },
    "Yaml": {
      "type": "string",
      "enum": ["prettier", "yamlfmt", "yamlfix"]
    },
    "Zig": {
      "type": "string",
      "enum": ["zigfmt"]
    }
  }
}
