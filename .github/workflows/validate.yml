name: validate
on:
  push:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
jobs:
  lint:
    name: lint
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - run: rustup toolchain install stable --profile minimal
      - run: rustup component add rustfmt clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo fetch
      - run: cargo fmt -- --check --color always
      - run: cargo clippy
  validate-github-action:
    name: validate-github-action
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]
    defaults:
      run:
        working-directory: ./github-action
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm i
      - run: npm run lint:biome
      - run: npm run lint:eslint
  validate-vscode:
    name: validate-vscode
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [20]
    defaults:
      run:
        working-directory: ./mdsf-vscode
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          check-latest: true
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm i
      - run: npm run lint:biome
      - run: npm run lint:eslint
      - run: npm run compile
